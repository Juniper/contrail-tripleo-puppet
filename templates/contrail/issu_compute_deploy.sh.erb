#!/bin/bash -x

api_server=${api_server:-<%= @api_server %>}
api_port=${api_port:-<%= @api_port %>}
host_ip=${host_ip:-<%= @host_ip %>}
internal_api_ssl=${internal_api_ssl:-<%= @internal_api_ssl %>}
vhost_user_mode=${vhost_user_mode:-<%= @vhost_user_mode %>}
is_dpdk=${is_dpdk:-<%= @is_dpdk %>}
admin_password=${admin_password:-<%= @admin_password %>}
admin_tenant_name=${admin_tenant_name:-<%= @admin_tenant_name %>}
admin_user=${admin_user:-<%= @admin_user %>}

AUTH_PARAMS="--admin_password $admin_password"
AUTH_PARAMS+=" --admin_tenant $admin_tenant_name"
AUTH_PARAMS+=" --admin_user $admin_user"

vhost_user_mode_opts=''
if [[ -n "$vhost_user_mode"  ]] ; then
  vhost_user_mode_opts="--virtual_router_vhost_user_mode ${vhost_user_mode}"
fi

dpdk_opts=''
if [[ "${is_dpdk,,}" == 'true' ]] ; then
  dpdk_opts='--dpdk_enabled'
fi

sudo systemctl stop supervisor-vrouter
sudo systemctl disable supervisor-vrouter

function provision_vrouter() {
  local name=$1
  local oper=$2
  sudo python /opt/contrail/utils/provision_vrouter.py \
    --oper $oper \
    --host_name $name \
    --host_ip ${host_ip} \
    --api_server_ip ${api_server} \
    --api_server_port ${api_port} \
    --api_server_use_ssl ${internal_api_ssl} \
    $AUTH_PARAMS \
    $vhost_user_mode_opts \
    $dpdk_opts
}

#Reprovision with fqdn
old_name=$(uname -n)
new_name=$(resolveip -s $host_ip)
if [[ "$old_name" != "$new_name" ]] ; then
  provision_vrouter $old_name del
  provision_vrouter $new_name add
fi

# remove old vrouter
sudo yum remove -y contrail-vrouter
# remove old links after removal rpm 
sudo find /lib/modules/ -name vrouter.ko -type l -exec rm -f {} +

function run_step(){
  local step=$1
  local config_file="/var/lib/tripleo-config/hashed-docker-container-startup-config-step_${step}.json"
  sudo paunch --debug apply --managed-by tripleo \
    --config-id tripleo_step${step} \
    --file $config_file

  if [[ $? != 0 ]] ; then
    echo "ERROR: failed to run step $step"
    return 1
  fi

  local compact_config_file="/var/lib/tripleo-config/docker-container-startup-config-step_${step}.json"
  sudo bash -c "cat $$config_file | jq -c '.' > $compact_config_file"
  sudo chmod 600 $compact_config_file
}

for i in 1 2 3 ; do
  run_step $i || exit -1
done

# update modules dependencies
sudo depmod -a

run_step 5 || exit -1

echo "ISSU node deployed successfully"
echo "Wait Contrail is initializing..." 
sleep 10
echo "Contrail status:"
sudo contrail-status
